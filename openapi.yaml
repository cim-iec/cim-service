openapi: 3.0.0
info:
  version: 0.0.2
  title: ANM4L API
  description: ''
paths:


#####################################
##             MODELS              ##
#####################################

  /models:
    get:
      tags:
        - Network Models
      summary: Get all network models
      operationId: cimadapter.get_models
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ModelReply'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - Network Models
      summary: Add a network model
      operationId: cimadapter.add_model
      requestBody:
        description: Network model to be added
        required: true
        content:
          multipart/form-data:
            schema:
              # This would be the nice version, but connexion has a bug with this: https://github.com/zalando/connexion/issues/1275
              # Therefore, we use the longer not-ref version:
              # allOf:
              #   - $ref: '#/components/schemas/Model'
              #   required:
              #     - files
              #     - name
              #     - profiles
              #     - version
              #   properties:
              #     files:
              #       type: array
              #       description: List of cim-xml files
              #       items:
              #         type: string
              #         format: binary
              type: object
              description: Properties of a simulation model
              required:
                - files
                - name
                - profiles
                - version
              properties:
                name:
                  type: string
                  description: Name of simulation model
                profiles:
                  description: List of cgmes profiles in the model
                  type: array
                  items:
                    $ref: '#/components/schemas/CGMES_Profile'
                version:
                  # TODO: Discuss this
                  description: cgmes version string. Example "cgmes_v2_4_15"
                  type: string
                  pattern: '^cgmes_v\d+_\d+(_\d+){0,1}$'
                files:
                  type: array
                  description: List of cim-xml files
                  items:
                    type: string
                    format: binary

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelReply'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /models/{id}:
    get:
      tags:
        - Network Models
      summary: Get a network model
      operationId: cimadapter.get_model
      parameters:
        - name: id
          description: Model id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelReply'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      tags:
        - Network Models
      summary: Update a network model
      operationId: cimadapter.update_model
      parameters:
        - name: id
          description: Model id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: Network model to be updated
        required: true
        content:
          multipart/form-data:
            schema:
              allOf:
                - $ref: '#/components/schemas/Model'
                - type: object
                  properties:
                    files:
                      type: array
                      description: List of cim-xml files
                      items:
                        type: string
                        format: binary

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelReply'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - Network Models
      summary: Delete a network model
      operationId: cimadapter.delete_model
      parameters:
        - name: id
          description: Model id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelReply'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /models/{id}/export:
    get:
      tags:
        - Network Models
      summary: Export model to file
      description: >-
        Returns an archive containing the grid data in CIM formatted files
        and profile files that might have been imported previously.
      operationId: cimadapter.export_model
      parameters:
        - name: id
          description: Model id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                description: archive containing the CIM files
                type: string
                format: binary
            # TODO: figure out how this can be done in connexion
            # text/uri-list:
            #   schema:
            #     description: link to archive containing the CIM files
            #     type: string
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /models/{id}/elements:
    get:
      tags:
        - Network Models
      summary: Get all elements of a model
      operationId: cimadapter.get_elements
      parameters:
        - name: id
          description: Model id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ModelElement'
        default:
            description: unexpected error
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"
    post:
      tags:
        - Network Models
      summary: Add element to model
      operationId: cimadapter.add_element
      parameters:
        - name: id
          description: Model id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: Element to be added to model
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewModelElement'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelElement'
        default:
            description: unexpected error
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"

  /models/{id}/elements/{elem_id}:
    get:
      tags:
        - Network Models
      summary: Get element of model
      operationId: cimadapter.get_element
      parameters:
        - name: id
          description: Model id
          in: path
          required: true
          schema:
            type: integer
        - name: elem_id
          description: Element id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelElementAttributes'
        default:
            description: unexpected error
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"
    put:
      tags:
        - Network Models
      summary: Update element of model
      operationId: cimadapter.update_element
      parameters:
        - name: id
          description: model id
          in: path
          required: true
          schema:
            type: integer
        - name: elem_id
          description: element id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: Model Element attributes to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelElementUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelElement'
        default:
            description: unexpected error
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"
    delete:
      tags:
        - Network Models
      summary: Delete element of model
      operationId: cimadapter.delete_element
      parameters:
        - name: id
          description: model id
          in: path
          required: true
          schema:
            type: integer
        - name: elem_id
          description: element id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelElement'
        default:
            description: unexpected error
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"

#####################################
##            ANALYSIS            ##
#####################################

  /analysis:
    get:
      tags:
        - Static Analysis
      summary: Get all network models
      operationId: dpsimadapter.get_all_analysis
      responses:
        '200':
          description: OK
          content:
              # schema:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnalysisResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - Static Analysis
      summary: Add a new analysis
      operationId: dpsimadapter.add_analysis
      requestBody:
        description: Analysis model to be added
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/PowerflowAnalysis'
                - $ref: '#/components/schemas/OutageAnalysis'
            example:
              name: "theAnalysis"
              type: "PowerflowAnalysis"
              modelid: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"


  /analysis/{id}:
    get:
      tags:
        - Static Analysis
      summary: Get specific analysis status and results
      operationId: dpsimadapter.get_analysis
      parameters:
        - name: id
          description: Analysis id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisResponse'
            # TODO: Maybe encode this in the response type. I'm not very confident with different content-type responses
            application/octet-stream:
              schema:
                description: Archive containing result and log files, e.g. CSV
                type: string
                format: binary
            text/uri-list:
              schema:
                description: Link to archive containing result and log files
                type: string
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - Static Analysis
      summary: Delete specific analysis including results
      operationId: dpsimadapter.delete_analysis
      parameters:
        - name: id
          description: Analysis id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Model:
      type: object
      description: Properties of a simulation model
      properties:
        name:
          type: string
          description: Name of simulation model
        profiles:
          description: List of cgmes profiles in the model
          type: array
          items:
            $ref: '#/components/schemas/CGMES_Profile'
        version:
          # TODO: Discuss this
          description: cgmes version string. Example "cgmes_v2_4_15"
          type: string
          pattern: '^cgmes_v\d+_\d+(_\d+){0,1}$'

    ModelReply:
      allOf:
        - type: object
          required:
            - id
            - name
            - profiles
            - version
          properties:
            id:
              type: integer
              description: Handle to the model
        - $ref: '#/components/schemas/Model'

    ModelElement:
      type: object
      properties:
        id:
          type: integer
        uuid:
          description: CIM UUID of model element
          type: string
        name:
          description: Name of model element
          type: string
        type:
          description: CIM type of model element
          type: string

    ModelElementAttributes:
      type: object
      properties:
        id:
          type: integer
        uuid:
          description: CIM UUID of model element
          type: string
        name:
          description: Name of model element
          type: string
        type:
          description: CIM type of model element
          type: string
        attributes:
          description: Element attributes, e.g. strings and numbers
          type: object

    NewModelElement:
      type: object
      required:
        - name
        - type
      properties:
        name:
          description: Name of model element
          type: string
        type:
          description: CIM type of model element
          type: string
        param:
          description: Element attributes, e.g. strings and numbers
          type: object

    ModelElementUpdate:
      type: object
      properties:
        name:
          description: Name of model element
          type: string
        type:
          description: CIM type of model element
          type: string
        param:
          description: Element attributes, e.g. strings and numbers
          type: object

    Analysis:
      type: object
      required:
        - name
        - type
        - modelid
      properties:
        name:
          description: Name of analysis case
          type: string
        type:
          description: Type of analysis, e.g. PowerflowAnalysis
          type: string
        modelid:
          description: Model to consider for analysis
          type: integer
      discriminator:
        propertyName: type

    AnalysisResponse:
      oneOf:
        - $ref: '#/components/schemas/PowerflowAnalysis'
        - $ref: '#/components/schemas/OutageAnalysis'
      properties:
        id:
          type: integer
        status:
          description: Indicate if analysis is completed or not
          # TODO change to better type (Bool/Enum (Pending/Running/Completed))
          type: string

    PowerflowAnalysis:
      allOf:
        - $ref: '#/components/schemas/Analysis'
        - type: object
          properties:
            param:
              description: >-
                attribute map, e.g. strings and numbers to define solver
                settings etc.
              type: object
              additionalProperties: {}

    OutageAnalysis:
      allOf:
      - $ref: '#/components/schemas/Analysis'
      - type: object
        required:
          - nm1List
        properties:
          nm1List:
            description: List of N-1 components
            type: array
            items:
              type: string
          nm2List:
            description: List of N-2 components
            type: array
            items:
              type: string
          param:
            description: attribute map, e.g. strings and numbers
            type: object
            additionalProperties: {}


    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    CGMES_Profile:
      type: string
      enum:
        - EQ
        - SSH
        - TP
        - SV
        - DY
        - GL
        - DI
      description: >
        Profile names:
          * `DI` - DiagramLayout
          * `DY` - Dynamics
          * `EQ` - Equipment
          * `GL` - GeographicalLocation
          * `SV` - StateVariables
          * `SSH` - SteadyStateHypothesis
          * `TP` - Topology

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
      x-apikeyInfoFunc: cimadapter.apikey_auth

# Apply the apikey globally to all operations
# security:
  # - ApiKeyAuth: []     # use the same name as under securitySchemes

servers:
  - description: Example server
    url: https://example.org/
