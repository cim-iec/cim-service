# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from models.base_model_ import Model
import util

class Model(Model):
    """NOTE: This class is auto generated by OpenAPI Generator
     (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name=None, profiles=None, version=None):  # noqa: E501
        """Model - a model defined in OpenAPI

        :param name: The name of this Model.  # noqa: E501
        :type name: str
        :param profiles: The profiles of this Model.  # noqa: E501
        :type profiles: List[CGMESProfile]
        :param version: The version of this Model.  # noqa: E501
        :type version: str
        """
        # Note: profiles would be of type CGMES Profile. But the serialization
        # and deserialization of foreign types with connexion is very annoying.
        #  Therefore we only convert when interacting with cimpy
        self.openapi_types = {
            'name': str,
            'profiles': [str],
            'version': str
        }

        self.attribute_map = {
            'name': 'name',
            'profiles': 'profiles',
            'version': 'version'
        }

        self._name = name
        self._profiles = profiles
        self._version = version

    @classmethod
    def from_dict(cls, dikt) -> 'Model':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Model of this Model.  # noqa: E501
        :rtype: Model
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this Model.

        Name of simulation model  # noqa: E501

        :return: The name of this Model.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Model.

        Name of simulation model  # noqa: E501

        :param name: The name of this Model.
        :type name: str
        """

        self._name = name

    @property
    def profiles(self):
        """Gets the profiles of this Model.

        List of cgmes profiles in the model  # noqa: E501

        :return: The profiles of this Model.
        :rtype: List[str]
        """
        return self._profiles

    @profiles.setter
    def profiles(self, profiles):
        """Sets the profiles of this Model.

        List of cgmes profiles in the model  # noqa: E501

        :param profiles: The profiles of this Model.
        :type profiles: List[str]
        """

        self._profiles = profiles

    @property
    def version(self):
        """Gets the version of this Model.

        Version string. Defaults to xyz  # noqa: E501

        :return: The version of this Model.
        :rtype: file
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this Model.

        Version string. Defaults to xyz  # noqa: E501

        :param version: The version of this Model.
        :type version: file
        """

        self._version = version
