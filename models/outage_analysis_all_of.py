# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from models.base_model_ import Model
import util

class OutageAnalysisAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, nm1_list=None, nm2_list=None, param=None):  # noqa: E501
        """OutageAnalysisAllOf - a model defined in OpenAPI

        :param nm1_list: The nm1_list of this OutageAnalysisAllOf.  # noqa: E501
        :type nm1_list: List[str]
        :param nm2_list: The nm2_list of this OutageAnalysisAllOf.  # noqa: E501
        :type nm2_list: List[str]
        :param param: The param of this OutageAnalysisAllOf.  # noqa: E501
        :type param: Dict[str, AnyType]
        """
        self.openapi_types = {
            'nm1_list': List[str],
            'nm2_list': List[str],
            'param': Dict[str, AnyType]
        }

        self.attribute_map = {
            'nm1_list': 'nm1List',
            'nm2_list': 'nm2List',
            'param': 'param'
        }

        self._nm1_list = nm1_list
        self._nm2_list = nm2_list
        self._param = param

    @classmethod
    def from_dict(cls, dikt) -> 'OutageAnalysisAllOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The OutageAnalysis_allOf of this OutageAnalysisAllOf.  # noqa: E501
        :rtype: OutageAnalysisAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def nm1_list(self):
        """Gets the nm1_list of this OutageAnalysisAllOf.

        List of N-1 components  # noqa: E501

        :return: The nm1_list of this OutageAnalysisAllOf.
        :rtype: List[str]
        """
        return self._nm1_list

    @nm1_list.setter
    def nm1_list(self, nm1_list):
        """Sets the nm1_list of this OutageAnalysisAllOf.

        List of N-1 components  # noqa: E501

        :param nm1_list: The nm1_list of this OutageAnalysisAllOf.
        :type nm1_list: List[str]
        """
        if nm1_list is None:
            raise ValueError("Invalid value for `nm1_list`, must not be `None`")  # noqa: E501

        self._nm1_list = nm1_list

    @property
    def nm2_list(self):
        """Gets the nm2_list of this OutageAnalysisAllOf.

        List of N-2 components  # noqa: E501

        :return: The nm2_list of this OutageAnalysisAllOf.
        :rtype: List[str]
        """
        return self._nm2_list

    @nm2_list.setter
    def nm2_list(self, nm2_list):
        """Sets the nm2_list of this OutageAnalysisAllOf.

        List of N-2 components  # noqa: E501

        :param nm2_list: The nm2_list of this OutageAnalysisAllOf.
        :type nm2_list: List[str]
        """

        self._nm2_list = nm2_list

    @property
    def param(self):
        """Gets the param of this OutageAnalysisAllOf.

        attribute map, e.g. strings and numbers  # noqa: E501

        :return: The param of this OutageAnalysisAllOf.
        :rtype: Dict[str, AnyType]
        """
        return self._param

    @param.setter
    def param(self, param):
        """Sets the param of this OutageAnalysisAllOf.

        attribute map, e.g. strings and numbers  # noqa: E501

        :param param: The param of this OutageAnalysisAllOf.
        :type param: Dict[str, AnyType]
        """

        self._param = param
