# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from models.base_model_ import Model
import util


class ModelElementAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, uuid=None, name=None, type=None, attributes=None):  # noqa: E501
        """ModelElementAttributes - a model defined in OpenAPI

        :param id: The id of this ModelElementAttributes.  # noqa: E501
        :type id: int
        :param uuid: The uuid of this ModelElementAttributes.  # noqa: E501
        :type uuid: str
        :param name: The name of this ModelElementAttributes.  # noqa: E501
        :type name: str
        :param type: The type of this ModelElementAttributes.  # noqa: E501
        :type type: str
        :param attributes: The attributes of this ModelElementAttributes.  # noqa: E501
        :type attributes: object
        """
        self.openapi_types = {
            'id': int,
            'uuid': str,
            'name': str,
            'type': str,
            'attributes': object
        }

        self.attribute_map = {
            'id': 'id',
            'uuid': 'uuid',
            'name': 'name',
            'type': 'type',
            'attributes': 'attributes'
        }

        self._id = id
        self._uuid = uuid
        self._name = name
        self._type = type
        self._attributes = attributes

    @classmethod
    def from_dict(cls, dikt) -> 'ModelElementAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ModelElementAttributes of this ModelElementAttributes.  # noqa: E501
        :rtype: ModelElementAttributes
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this ModelElementAttributes.


        :return: The id of this ModelElementAttributes.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ModelElementAttributes.


        :param id: The id of this ModelElementAttributes.
        :type id: int
        """

        self._id = id

    @property
    def uuid(self):
        """Gets the uuid of this ModelElementAttributes.

        CIM uuid of model element  # noqa: E501

        :return: The uuid of this ModelElementAttributes.
        :rtype: str
        """
        return self._uuid

    @uuid.setter
    def uuid(self, uuid):
        """Sets the uuid of this ModelElementAttributes.

        CIM uuid of model element  # noqa: E501

        :param uuid: The uuid of this ModelElementAttributes.
        :type uuid: str
        """

        self._uuid = uuid

    @property
    def name(self):
        """Gets the name of this ModelElementAttributes.

        Name of model element  # noqa: E501

        :return: The name of this ModelElementAttributes.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ModelElementAttributes.

        Name of model element  # noqa: E501

        :param name: The name of this ModelElementAttributes.
        :type name: str
        """

        self._name = name

    @property
    def type(self):
        """Gets the type of this ModelElementAttributes.

        CIM type of model element  # noqa: E501

        :return: The type of this ModelElementAttributes.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ModelElementAttributes.

        CIM type of model element  # noqa: E501

        :param type: The type of this ModelElementAttributes.
        :type type: str
        """

        self._type = type

    @property
    def attributes(self):
        """Gets the attributes of this ModelElementAttributes.

        Element attributes, e.g. strings and numbers  # noqa: E501

        :return: The attributes of this ModelElementAttributes.
        :rtype: object
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this ModelElementAttributes.

        Element attributes, e.g. strings and numbers  # noqa: E501

        :param attributes: The attributes of this ModelElementAttributes.
        :type attributes: object
        """

        self._attributes = attributes
