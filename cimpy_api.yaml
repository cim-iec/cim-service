openapi: 3.0.0
info:
  version: 0.0.1
  title: ANM4L API
  description: ''
paths:
  /models:
    get:
      tags:
        - Network Models
      summary: Get all network models
      operationId: cimadapter.get_models
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: "hello dave!"
            # application/json:
              # schema:
                # type: array
                # items:
                  # $ref: '#/components/schemas/Model'
        default:
          description: unexpected error
          content:
            # application/json:
              # schema:
                # $ref: "#/components/schemas/Error"
            text/plain:
              schema:
                type: string
                example: "ERRororororor"
    post:
      tags:
        - Network Models
      summary: Add a network model
      operationId: cimadapter.add_model
      requestBody:
        description: Network model to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewModel'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /models/{id}:
    get:
      tags:
        - Network Models
      summary: Get a network model
      operationId: cimadapter.get_model
      parameters:
        - name: id
          description: Model id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      tags:
        - Network Models
      summary: Update a network model
      operationId: cimadapter.update_model
      parameters:
        - name: id
          description: Model id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: Network model to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - Network Models
      summary: Delete a network model
      operationId: cimadapter.delete_model
      parameters:
        - name: id
          description: Model id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /models/import/{id}:
    post:
      tags:
        - Network Models
      summary: Import model from file
      description: >-
        The input file should be an archive containing the grid data
        in the CIM format. Optionally, profiles or stochastic parameters can be
        given as additional files, where file and column name should correspond
        to the CIM component uuid and attribute name.
      operationId: cimadapter.import_model
      parameters:
        - name: id
          description: Model id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: Files defining the model
        required: true
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
          text/uri-list:
            schema:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /models/export/{id}:
    get:
      tags:
        - Network Models
      summary: Export model to file
      description: >-
        Returns an archive containing the grid data in CIM formatted files
        and profile files that might have been imported previously.
      operationId: cimadapter.export_model
      parameters:
        - name: id
          description: Model id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                description: archive containing the CIM files
                type: string
                format: binary
            text/uri-list:
              schema:
                description: link to archive containing the CIM files
                type: string
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /models/image/{id}:
    get:
      tags:
        - Network Models
      summary: Render and return image of network model
      description: >-
        Returns an SVG image of the network based on CIM information.
      operationId: cimadapter.get_model_image
      parameters:
        - name: id
          description: Model id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                description: image file as SVG
                type: string
                format: binary
            text/uri-list:
              schema:
                description: link to image file as SVG
                type: string
        default:
            description: unexpected error
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"

  /models/{modelid}/elements:
    get:
      tags:
        - Network Models
      summary: Get all elements of a model
      operationId: cimadapter.get_elements
      parameters:
        - name: modelid
          description: Model id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ModelElement'
        default:
            description: unexpected error
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"
    post:
      tags:
        - Network Models
      summary: Add element to model
      operationId: cimadapter.add_element
      parameters:
        - name: modelid
          description: Model id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: Element to be added to model
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewModelElement'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelElement'
        default:
            description: unexpected error
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"

  /models/{modelid}/elements/{id}:
    get:
      tags:
        - Network Models
      summary: Get element of model
      operationId: cimadapter.get_element
      parameters:
        - name: modelid
          description: Model id
          in: path
          required: true
          schema:
            type: integer
        - name: id
          description: Element id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelElementAttributes'
        default:
            description: unexpected error
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"
    put:
      tags:
        - Network Models
      summary: Update element of model
      operationId: cimadapter.update_element
      parameters:
        - name: modelid
          description: model id
          in: path
          required: true
          schema:
            type: integer
        - name: id
          description: element id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: Model Element attributes to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelElementUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelElement'
        default:
            description: unexpected error
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"
    delete:
      tags:
        - Network Models
      summary: Delete element of model
      operationId: cimadapter.delete_element
      parameters:
        - name: modelid
          description: model id
          in: path
          required: true
          schema:
            type: integer
        - name: id
          description: element id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelElement'
        default:
            description: unexpected error
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"


components:
  schemas:
    # User:
      # type: object
      # properties:
        # active:
          # description: >
            # Indicating status of user (false means user is inactive and should not
            # be able to login)
          # type: boolean
        # id:
          # type: integer
        # mail:
          # description: Mail of user
          # type: string
        # role:
          # description: Role of user
          # type: string
        # name:
          # description: Username of user
          # type: string
    # NewUser:
      # type: object
      # required:
        # - name
        # - password
        # - mail
        # - role
      # properties:
        # name:
          # type: string
        # password:
          # type: string
        # mail:
          # type: string
        # role:
          # type: string
    # UserUpdate:
      # type: object
      # properties:
        # active:
          # type: string
        # mail:
          # type: string
        # old_password:
          # type: string
        # password:
          # type: string
        # role:
          # type: string
        # name:
          # type: string

    Model:
      type: object
      properties:
        id:
          type: integer
        name:
          description: Name of simulation model
          type: string
    NewModel:
      type: object
      required:
        - name
      properties:
        name:
          type: string
    ModelUpdate:
      type: object
      properties:
        name:
          type: string

    ModelElement:
      type: object
      properties:
        id:
          type: integer
        uuid:
          description: CIM uuid of model element
          type: string
        name:
          description: Name of model element
          type: string
        type:
          description: CIM type of model element
          type: string
    ModelElementAttributes:
      type: object
      properties:
        id:
          type: integer
        uuid:
          description: CIM uuid of model element
          type: string
        name:
          description: Name of model element
          type: string
        type:
          description: CIM type of model element
          type: string
        attributes:
          description: Element attributes, e.g. strings and numbers
          type: object
          additionalProperties: {}
    NewModelElement:
      type: object
      required:
        - name
        - type
      properties:
        name:
          description: Name of model element
          type: string
        type:
          description: CIM type of model element
          type: string
        param:
          description: Element attributes, e.g. strings and numbers
          type: object
          additionalProperties: {}
    ModelElementUpdate:
      type: object
      properties:
        name:
          description: Name of model element
          type: string
        type:
          description: CIM type of model element
          type: string
        param:
          description: Element attributes, e.g. strings and numbers
          type: object
          additionalProperties: {}

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
      x-apikeyInfoFunc: cimadapter.apikey_auth

# Apply the apikey globally to all operations
security:
  - ApiKeyAuth: []     # use the same name as under securitySchemes

servers:
  - description: Example server
    url: https://example.org/CIM/0.0.1
